<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="false"/>

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}"/>
        <property name="maxTotal" value="${redis.maxTotal}"/>
        <property name="minIdle" value="${redis.minIdle}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">
        <constructor-arg name="poolConfig" ref="poolConfig"/>
        <constructor-arg name="host" value="${redis.server.host}"/>
        <constructor-arg name="port" value="${redis.server.port}"/>
        <constructor-arg name="timeout" value="${redis.server.timeout}"/>
        <constructor-arg name="password" value="${redis.server.pwd}"/>
        <constructor-arg name="database" value="${redis.server.db}"/>
        <constructor-arg name="clientName" value="CRM"/>
    </bean>

    <bean id="jedisConnFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis.server.host}"
          p:port="${redis.server.port}"
          p:timeout="${redis.server.timeout}"
          p:password="${redis.server.pwd}"
          p:poolConfig-ref="poolConfig"
          p:database="${redis.server.db}"
          p:usePool="true"/>

    <!-- redis 操作配置-->
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="jedisConnFactory"/>

    <bean id="myService" class="com.github.blackshadowwalker.spring.distributelock.component.MyService"></bean>

    <bean id="lockManager" class="com.github.blackshadowwalker.spring.distributelock.redis.RedisLockManager"
          p:lockPrefix="${lock.prefix}"
          p:cacheLock="true"
          p:redisTemplate-ref="stringRedisTemplate" />

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <bean class="com.github.blackshadowwalker.spring.distributelock.interceptor.LockAspectSupport" p:lockManager-ref="lockManager" />

</beans>